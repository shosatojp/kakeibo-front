{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/annual-report/annual-report.component.ts","./src/app/annual-report/annual-report.component.html","./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/authenticator.service.ts","./src/app/calendar/calendar.component.ts","./src/app/calendar/calendar.component.html","./src/app/category-settings/category-settings.component.ts","./src/app/category-settings/category-settings.component.html","./src/app/entry/entry.component.ts","./src/app/entry/entry.component.html","./src/app/entrydata.service.ts","./src/app/input-data/input-data.component.ts","./src/app/input-data/input-data.component.html","./src/app/login/login.component.ts","./src/app/login/login.component.html","./src/app/not-found/not-found.component.ts","./src/app/not-found/not-found.component.html","./src/app/register/register.component.ts","./src/app/register/register.component.html","./src/app/settings/settings.component.ts","./src/app/settings/settings.component.html","./src/app/top/top.component.ts","./src/app/top/top.component.html","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { Component, OnInit, Input } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { MonthInfo } from '../definitions';\nimport { EntrydataService } from '../entrydata.service';\n\n@Component({\n    selector: 'app-annual-report',\n    templateUrl: './annual-report.component.html',\n    styleUrls: ['./annual-report.component.scss']\n})\nexport class AnnualReportComponent implements OnInit {\n\n    @Input() year: number;\n\n    data: MonthInfo[] = [];\n    categories: string[] = [];\n\n    constructor(\n        private route: ActivatedRoute,\n        private router: Router,\n        private entrydata: EntrydataService,\n    ) {\n        this.year = route.data['year'] || new Date().getFullYear();\n    }\n\n    ngOnInit(): void {\n        this.update();\n    }\n\n    async update() {\n        const data: MonthInfo[] = [];\n        this.categories = await this.entrydata.getCategories();\n        for (let i = 0; i < 12; i++) {\n            data.push(await this.entrydata.getMonthInfo(this.year, i + 1));\n        }\n        this.data = data;\n    }\n\n    sumCategory(c: string) {\n        return this.data.map(e => {\n            return e.categories[c] ? e.categories[c].sum : 0;\n        }).reduce((a, b) => a + b, 0);\n    }\n\n    sumAll() {\n        return this.categories.map(c =>\n            this.sumCategory(c)).reduce((a, b) => a + b, 0);\n    }\n\n    async showPrevYear(){\n        this.router.navigate(['/annual-report', --this.year]);\n        this.update();\n    }\n    async showNextYear(){\n        this.router.navigate(['/annual-report', ++this.year]);\n        this.update();\n    }\n\n}\n","\n<div class=\"buttons\">\n    <button mat-button (click)=\"showPrevYear()\">昨年</button>\n    <button mat-button (click)=\"showNextYear()\">来年</button>\n</div>\n<table>\n    <tr>\n        <th>{{year}}年</th>\n        <th class=\"header\" *ngFor=\"let c of categories\">{{c}}</th>\n        <th class=\"header\">合計</th>\n    </tr>\n    <tr *ngFor=\"let m of data\">\n        <td class=\"header\">{{m.month}}月</td>\n        <td class=\"price\" *ngFor=\"let c of categories\">\n            {{m.categories[c] ? m.categories[c].sum : 0}}円\n        </td>\n        <td class=\"header price\">{{m.sum}}円</td>\n    </tr>\n    <tr>\n        <td class=\"header\">合計</td>\n        <td class=\"header price\" *ngFor=\"let c of categories\">\n            {{sumCategory(c)}}円\n        </td>\n        <td class=\"header price\">{{sumAll()}}円</td>\n    </tr>\n</table>","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { LoginComponent } from './login/login.component';\nimport { RegisterComponent } from './register/register.component';\nimport { TopComponent } from './top/top.component';\nimport { CalendarComponent } from './calendar/calendar.component';\nimport { SettingsComponent } from './settings/settings.component';\nimport { AnnualReportComponent } from './annual-report/annual-report.component';\nimport { NotFoundComponent } from './not-found/not-found.component';\n\n\nconst routes: Routes = [\n    {\n        path: 'login',\n        component: LoginComponent\n    },\n    {\n        path: 'register',\n        component: RegisterComponent\n    },\n    {\n        path: 'calendar/:year/:month',\n        component: CalendarComponent,\n    },\n    {\n        path: 'calendar',\n        component: CalendarComponent,\n    },\n    {\n        path: 'settings',\n        component: SettingsComponent,\n    },\n    {\n        path: 'annual-report/:year',\n        component: AnnualReportComponent,\n    },\n    {\n        path: 'annual-report',\n        component: AnnualReportComponent,\n    },\n    {\n        path: '',\n        component: TopComponent,\n    },\n    {\n        path: '**',\n        component: NotFoundComponent,\n    },\n];\n\n@NgModule({\n    imports: [RouterModule.forRoot(routes)],\n    exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component } from '@angular/core';\n\nimport { MatDialog, MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { InputDataComponent } from './input-data/input-data.component';\nimport { CalendarComponent } from './calendar/calendar.component';\nimport { AuthenticatorService } from './authenticator.service';\nimport { Entry } from './definitions';\nimport { MatSidenavContainer, MatSidenav } from '@angular/material/sidenav';\nimport { Router } from '@angular/router';\n\n\n@Component({\n    selector: 'app-root',\n    templateUrl: './app.component.html',\n    styleUrls: ['./app.component.scss'],\n})\nexport class AppComponent {\n    title = 'kakeibo';\n    constructor(\n        public dialog: MatDialog,\n        public authenticator: AuthenticatorService,\n        private router: Router) {\n    }\n\n    prevInputData: Entry;\n    openDialog(exit: boolean = false): void {\n        const dialogRef = this.dialog.open(InputDataComponent, {\n            width: '300px',\n            data: {\n                prevInputData: this.prevInputData,\n                exit: exit\n            }\n        });\n\n        dialogRef.afterClosed().subscribe(result => {\n        });\n    }\n}\n","<mat-toolbar color=\"primary\">\n    <button mat-icon-button (click)=\"snav.toggle()\">\n        <mat-icon>menu</mat-icon>\n    </button>\n    <button mat-flat-button routerLink=\"/\" color=\"primary\">\n        <h1>家計簿</h1>\n    </button>\n    <span class=\"spacer\"></span>\n    <span id=\"username\">{{authenticator.userName}}</span>\n    <button mat-flat-button (click)=\"openDialog(false)\" *ngIf=\"authenticator.sessionId\">追加</button>\n</mat-toolbar>\n<mat-sidenav-container style=\"grid-row: 2;\">\n    <mat-sidenav #snav mode=\"over\" style=\"min-width: 200px;max-width: 100vw;\">\n        <mat-nav-list>\n            <a mat-list-item (click)=\"snav.toggle()\" routerLink=\"/\">ホーム</a>\n            <a mat-list-item *ngIf=\"!!authenticator.sessionId\" (click)=\"snav.toggle()\" routerLink=\"/calendar\">カレンダー</a>\n            <a mat-list-item *ngIf=\"!!authenticator.sessionId\" (click)=\"snav.toggle()\" routerLink=\"/settings\">設定</a>\n            <a mat-list-item *ngIf=\"!!authenticator.sessionId\" (click)=\"snav.toggle()\" routerLink=\"/annual-report\">年間</a>\n            <a mat-list-item *ngIf=\"!!authenticator.sessionId\" (click)=\"snav.toggle() && authenticator.logout()\">ログアウト</a>\n        </mat-nav-list>\n    </mat-sidenav>\n    <mat-sidenav-content>\n        <router-outlet></router-outlet>\n    </mat-sidenav-content>\n</mat-sidenav-container>","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { CalendarComponent } from './calendar/calendar.component';\nimport { InputDataComponent } from './input-data/input-data.component';\nimport { MatDatepickerModule } from '@angular/material/datepicker';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatNativeDateModule } from '@angular/material/core';\nimport { HttpClientModule, HttpHandler, HttpClient } from '@angular/common/http';\nimport { AuthenticatorService } from './authenticator.service';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatSliderModule } from '@angular/material/slider';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatAutocompleteModule } from '@angular/material/autocomplete';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { EntryComponent } from './entry/entry.component';\nimport { MatTableModule } from '@angular/material/table';\nimport { MatChipsModule } from '@angular/material/chips';\nimport { MatTooltipModule } from '@angular/material/tooltip';\nimport { MatSnackBarModule } from '@angular/material/snack-bar';\nimport { MatIconModule } from '@angular/material/icon';\nimport { TopComponent } from './top/top.component';\nimport { LoginComponent } from './login/login.component';\nimport { RegisterComponent } from './register/register.component';\nimport { LocationStrategy, HashLocationStrategy } from '@angular/common';\nimport { MatToolbarModule } from '@angular/material/toolbar';\nimport { MatSidenavModule } from '@angular/material/sidenav';\nimport { MatListModule, MatList } from '@angular/material/list';\nimport { SettingsComponent } from './settings/settings.component';\nimport { AnnualReportComponent } from './annual-report/annual-report.component';\nimport { NotFoundComponent } from './not-found/not-found.component';\nimport { MatBadgeModule } from '@angular/material/badge';\nimport { DragDropModule } from '@angular/cdk/drag-drop';\nimport { CategorySettingsComponent } from './category-settings/category-settings.component';\nimport {MatRadioModule} from '@angular/material/radio';\n\n@NgModule({\n    declarations: [\n        AppComponent,\n        CalendarComponent,\n        InputDataComponent,\n        EntryComponent,\n        TopComponent,\n        LoginComponent,\n        RegisterComponent,\n        SettingsComponent,\n        AnnualReportComponent,\n        NotFoundComponent,\n        CategorySettingsComponent\n    ],\n    imports: [\n        BrowserModule,\n        AppRoutingModule,\n        BrowserAnimationsModule,\n        MatDatepickerModule,\n        MatFormFieldModule,\n        MatNativeDateModule,\n        FormsModule,\n        ReactiveFormsModule,\n        HttpClientModule,\n        MatButtonModule,\n        MatSliderModule,\n        MatInputModule,\n        MatAutocompleteModule,\n        MatTableModule,\n        MatChipsModule,\n        MatTooltipModule,\n        MatSnackBarModule,\n        MatIconModule,\n        MatToolbarModule,\n        MatSidenavModule,\n        MatListModule,\n        MatBadgeModule,\n        DragDropModule,\n        MatRadioModule,\n    ],\n    providers: [\n        AuthenticatorService,\n        {\n            provide: LocationStrategy,\n            useClass: HashLocationStrategy,\n        }\n    ],\n    bootstrap: [AppComponent]\n})\nexport class AppModule { }\n\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders, HttpParams } from '@angular/common/http';\nimport { Router } from '@angular/router';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class AuthenticatorService {\n\n    constructor(\n        private http: HttpClient,\n        private router: Router\n    ) {\n        this.expiresOn = 0;\n    }\n\n    userName: string = localStorage.getItem('userName') || '';\n    password: string = '';\n    sessionId: string = localStorage.getItem('sessionId') || '';\n    expiresOn: number = Number(localStorage.getItem('expiresOn') || 0);\n\n    authed(): boolean {\n        return !!this.sessionId;\n    }\n\n    async updateSessionId() {\n        return new Promise((res, rej) => {\n            this.http.get('/api/v1/reflesh', {\n                params: {\n                    userName: this.userName,\n                    sessionId: this.sessionId,\n                },\n                observe: 'response'\n            }).subscribe(async response => {\n                console.log('aaa', response);\n                if (response.status == 200) {\n                    this.sessionId = response.body['sessionId'];\n                    localStorage.setItem('sessionId', this.sessionId);\n                    this.expiresOn = Number(response.body['expiresOn']);\n                    localStorage.setItem('expiresOn', String(this.expiresOn));\n                    res();\n                } else {\n                    await this.logout().catch(() => { });\n                    this.router.navigate(['/login']);\n                    rej();\n                }\n            }, async error => {\n                await this.logout().catch(() => { });\n                this.router.navigate(['/login']);\n                rej();\n            });\n        });\n    }\n\n    async auth(_userName?: string, _password?: string) {\n        const userName = _userName || this.userName;\n        const password = _password || this.password;\n\n        if (!(userName)) {\n            this.router.navigate(['/login']);\n            throw Error();\n        }\n\n        if (this.sessionId && this.expiresOn < new Date().getTime() + 1 * 60 * 1000) {\n            await this.updateSessionId().catch(() => {\n                throw Error();\n            });\n        }\n\n        if (!this.authed()) {\n            return new Promise((res, rej) => {\n                this.http.get('/api/v1/auth', {\n                    params: {\n                        userName: userName,\n                        password: password\n                    },\n                    observe: 'response'\n                }).subscribe(response => {\n                    if (response.status == 200) {\n                        console.log('authed');\n                        this.sessionId = response.body['sessionId'];\n                        this.expiresOn = Number(response.body['expiresOn']);\n                        this.userName = userName;\n                        localStorage.setItem('sessionId', this.sessionId);\n                        localStorage.setItem('expiresOn', String(this.expiresOn));\n                        localStorage.setItem('userName', userName);\n                        res();\n                    } else {\n                        this.router.navigate(['/login']);\n                        rej();\n                    }\n                }, error => {\n                    rej();\n                });\n            });\n        }\n    }\n\n    async logout(): Promise<boolean> {\n        localStorage.removeItem('userName');\n        localStorage.removeItem('sessionId');\n        localStorage.removeItem('expiresOn');\n        return new Promise((res, rej) => {\n            this.http.get('/api/v1/logout', {\n                params: {\n                    userName: this.userName,\n                    sessionId: this.sessionId,\n                },\n                observe: 'response'\n            }).subscribe(response => {\n                if (response.status == 200) {\n                    this.sessionId = null;\n                    this.userName = '';\n                    this.router.navigate(['/login']);\n                    res();\n                } else {\n                    rej();\n                }\n            }, error => {\n                rej();\n            });\n        });\n    }\n\n    async httpRequest(method: 'get' | 'post' | 'delete' | 'put', url: string, body: any, params: Object = {}) {\n        params['userName'] = this.userName;\n        params['sessionId'] = this.sessionId;\n\n        const param_list: string[] = [];\n        for (const key in params) {\n            if (params.hasOwnProperty(key)) {\n                param_list.push(`${key}=${params[key]}`);\n            }\n        }\n        if (param_list.length) {\n            url += `?${param_list.join('&')}`;\n        }\n\n        const options = {\n            method: method,\n            headers: {\n                \"Content-Type\": \"application/json; charset=utf-8\",\n            },\n            redirect: \"follow\",\n            referrer: \"no-referrer\",\n        };\n        if (body)\n            options['body'] = JSON.stringify(body);\n\n        return fetch(url, <RequestInit>options).then(async response => {\n            const text = await response.text();\n            return text && JSON.parse(text);\n        });\n    }\n}\n","import { Component, OnInit, Input } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { AuthenticatorService } from '../authenticator.service';\nimport { EntrydataService } from '../entrydata.service';\nimport { Entry } from '../definitions';\nimport { InputDataComponent } from '../input-data/input-data.component';\nimport { MatDialog } from '@angular/material/dialog';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { ActivatedRoute, ParamMap, Router } from '@angular/router';\n\n@Component({\n    selector: 'app-calendar',\n    templateUrl: './calendar.component.html',\n    styleUrls: ['./calendar.component.scss']\n})\nexport class CalendarComponent implements OnInit {\n    @Input() month: number;\n    @Input() year: number;\n\n    constructor(private http: HttpClient,\n        private authenticator: AuthenticatorService,\n        public entrydata: EntrydataService,\n        public dialog: MatDialog,\n        private _snackBar: MatSnackBar,\n        private route: ActivatedRoute,\n        private router: Router) {\n    }\n\n    ngOnInit(): void {\n        const self = this;\n        this.route.paramMap.subscribe((params: ParamMap) => {\n            self.year = Number(params.get('year'));\n            self.month = Number(params.get('month'));\n        });\n\n        if (!(this.year && this.month)) {\n            const now = new Date();\n            this.year = now.getFullYear();\n            this.month = now.getMonth() + 1;\n        }\n\n        this.authenticator.auth().then(async () => {\n            await this.show();\n        });\n    }\n\n    incrementMonth() {\n        if (this.month == 12) {\n            this.month = 1;\n            this.year++;\n        } else {\n            this.month++;\n        }\n    }\n\n    decrementMonth() {\n        if (this.month == 1) {\n            this.month = 12;\n            this.year--;\n        } else {\n            this.month--;\n        }\n    }\n    showNextMonth() {\n        this.incrementMonth();\n        this.router.navigate(['/calendar', this.year, this.month]);\n        this.show();\n    }\n    showPrevMonth() {\n        this.decrementMonth();\n        this.router.navigate(['/calendar', this.year, this.month]);\n        this.show();\n    }\n\n    async show() {\n        await this.entrydata.update(this.year, this.month);\n    }\n\n    sumDate(date: number): number {\n        let sum = 0;\n        for (const category of this.entrydata.data[date - 1].categories) {\n            for (const entry of category.entries) {\n                sum += entry.price;\n            }\n        }\n        return sum;\n    }\n\n    sumCategory(category: string): number {\n        return this.entrydata.data.map(e =>\n            e.categories.filter(e => e.category == category)\n                .map(e => e.entries.map(e => e.price).reduce((a, b) => a + b, 0))\n                .reduce((a, b) => a + b, 0)\n        ).reduce((a, b) => a + b, 0);\n    }\n\n    sumAll() {\n        return this.entrydata.categories.map(c => this.sumCategory(c)).reduce((a, b) => a + b, 0)\n    }\n\n    getDayOfWeek(date: Date): string {\n        return '日月火水木金土'[date.getDay()];\n    }\n\n    openDialogWithData(date: Date, category: string): void {\n        const dialogRef = this.dialog.open(InputDataComponent, {\n            width: '300px',\n            data: {\n                prevInputData: {\n                    date: date.getTime(),\n                    category: category\n                },\n                exit: true\n            }\n        });\n\n        dialogRef.afterClosed().subscribe(result => {\n        });\n    }\n\n    openSnackBar(message: string, action: string) {\n        this._snackBar.open(message, action, {\n            duration: 2000,\n        });\n    }\n}\n","<div class=\"center\">\n    <div class=\"buttons\">\n        <button mat-button (click)=\"showPrevMonth()\">先月</button>\n        <button mat-button (click)=\"showNextMonth()\">来月</button>\n    </div>\n\n    <table>\n        <tr>\n            <th class=\"header\">{{year}}年 {{month}}月</th>\n            <th class=\"header\" *ngFor=\"let category of entrydata.categories\">{{category}}</th>\n            <th class=\"header\">合計</th>\n        </tr>\n        <tr *ngFor=\"let obj of entrydata.data\">\n            <td class=\"header\">{{obj.date.getDate()}}日 ({{getDayOfWeek(obj.date)}})</td>\n            <td class=\"price\" *ngFor=\"let category of obj.categories\"\n                (click)=\"openDialogWithData(obj.date,category.category)\">\n                <mat-chip-list>\n                    <app-entry *ngFor=\"let entry of category.entries\" [entry]=\"entry\"></app-entry>\n                </mat-chip-list>\n            </td>\n            <td class=\"price header\">{{sumDate(obj.date.getDate())}}円</td>\n        </tr>\n        <tr>\n            <td class=\"header\">合計</td>\n            <td class=\"price header\" *ngFor=\"let category of entrydata.categories\">{{sumCategory(category)}}円</td>\n            <td class=\"price header\">{{sumAll()}}円</td>\n        </tr>\n    </table>\n</div>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n    selector: 'app-category-settings',\n    templateUrl: './category-settings.component.html',\n    styleUrls: ['./category-settings.component.scss']\n})\nexport class CategorySettingsComponent implements OnInit {\n\n    constructor() { }\n\n    ngOnInit(): void {\n    }\n\n    category: string = '';\n\n    changeCategoryName(){\n        \n    }\n\n}\n","<h3>分類名変更</h3>\n<div>\n    <mat-form-field>\n        <mat-label>新しい名前</mat-label>\n        <input matInput [(ngModel)]=\"category\">\n    </mat-form-field>\n</div>\n<div>\n    <button color=\"primary\" mat-raised-button>決定</button>\n</div>","import { Component, OnInit, Input } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Entry } from '../definitions';\nimport { EntrydataService } from '../entrydata.service';\n\n@Component({\n    selector: 'app-entry',\n    templateUrl: './entry.component.html',\n    styleUrls: ['./entry.component.scss']\n})\nexport class EntryComponent implements OnInit {\n    @Input() entry: Entry;\n    createdByUserName: string = '';\n    constructor(private http: HttpClient,\n        private entrydata: EntrydataService) { }\n\n    hover: boolean = false;\n    ngOnInit(): void {\n    }\n\n    async onMouseEnter() {\n        this.getCreatedByUserName();\n    }\n\n    async getCreatedByUserName() {\n        this.createdByUserName = this.createdByUserName || <string>(await this.http.get('/api/v1/username', {\n            params: {\n                userId: String(this.entry.createdBy)\n            }\n        }).toPromise())['userName'];\n    }\n\n    async remove() {\n        this.entrydata.removeEntry(this.entry);\n        const date = new Date(this.entry.date);\n        this.entrydata.update(date.getFullYear(), date.getMonth() + 1);\n    }\n}\n","<mat-chip (mouseover)=\"hover=true\" (mouseleave)=\"hover=false\" (mouseenter)=\"getCreatedByUserName()\"\n    [matTooltip]=\"createdByUserName || entry.createdBy\">{{entry.title}}\n    {{entry.price}}円\n    <mat-icon matChipRemove *ngIf=\"hover\" (click)=\"remove()\">cancel</mat-icon>\n</mat-chip>","import { Injectable } from '@angular/core';\nimport { Entry, MonthInfo } from './definitions';\nimport { AuthenticatorService } from './authenticator.service';\nimport { HttpClient } from '@angular/common/http';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class EntrydataService {\n\n    constructor(\n        private authenticator: AuthenticatorService,\n        private http: HttpClient,\n    ) {\n        this.authenticator.auth().then(async () => {\n            this.categories = await this.getCategories();\n        });\n\n    }\n\n    data: {\n        date: Date,\n        categories: {\n            entries: Entry[],\n            category: string,\n        }[],\n    }[] = [];\n    categories: string[] = [];\n\n    async update(year: number, month: number) {\n        this.updateCalendar(year, month);\n        this.updateMonthInfo();\n    }\n\n    async updateCalendar(year: number, month: number) {\n        const entries = await this.getEntries(year, month);\n        const categories = this.categories = await this.getCategories();\n        const first_day = new Date(year, month - 1, 1);\n        this.data = [];\n        do {\n            this.data.push({\n                date: new Date(first_day),\n                categories: categories.map(c => {\n                    return {\n                        category: c,\n                        entries: entries.filter(e => e.category == c && new Date(e.date).getDate() == first_day.getDate())\n                    }\n                })\n            });\n            first_day.setDate(first_day.getDate() + 1);\n        } while (first_day.getDate() != 1);\n    }\n\n\n    async getCategories(): Promise<string[]> {\n        return <string[]>(await this.http.get('/api/v1/category', {\n            params: {\n                userName: this.authenticator.userName,\n                sessionId: this.authenticator.sessionId,\n            }\n        }).toPromise())['categories'];\n    }\n\n    \n\n    async getEntries(year: number, month: number): Promise<Entry[]> {\n        return <Entry[]>(await this.http.get('/api/v1/entry', {\n            params: {\n                userName: this.authenticator.userName,\n                sessionId: this.authenticator.sessionId,\n                year: String(year),\n                month: String(month),\n            },\n        }).toPromise());\n    }\n\n    async removeEntry(entry: Entry) {\n        return (await this.http.delete('/api/v1/entry', {\n            params: {\n                userName: this.authenticator.userName,\n                sessionId: this.authenticator.sessionId,\n                id: String(entry.id)\n            },\n        }).toPromise());\n    }\n\n    async getUserName(userId): Promise<string> {\n        return <string>(await this.http.get('/api/v1/username', {\n            params: {\n                userName: this.authenticator.userName,\n                sessionId: this.authenticator.sessionId,\n                userId: userId\n            },\n        }).toPromise());\n    }\n\n    year: number = new Date().getFullYear();\n    month: number = new Date().getMonth() + 1;\n    currentMonth: MonthInfo;\n    prevMonth: MonthInfo;\n\n    async getMonthInfo(year: number, month: number): Promise<MonthInfo> {\n        const res = await this.authenticator.httpRequest('get', '/api/v1/month', null, {\n            year: String(year),\n            month: String(month)\n        });\n        return {\n            average: Math.floor(res['avg']) || 0,\n            sum: res['sum'] || 0,\n            count: res['count'] || 0,\n            month, year,\n            categories: res['categories']\n        }\n    }\n\n    async updateMonthInfo() {\n        this.authenticator.auth().then(async () => {\n            this.currentMonth = await this.getMonthInfo(this.year, this.month);\n            var prev_m, prev_y;\n            if (this.month == 1) {\n                prev_y = this.year - 1;\n                prev_m = 12;\n            } else {\n                prev_y = this.year;\n                prev_m = this.month - 1;\n            }\n            this.prevMonth = await this.getMonthInfo(prev_y, prev_m);\n        }).catch(() => { });\n    }\n\n\n    async postEntry(data: {\n        date: number,\n        price: number,\n        title: string,\n        category: string,\n    }) {\n        return this.authenticator.httpRequest('post', '/api/v1/entry', data);\n    }\n}\n","import { Component, OnInit, Inject } from '@angular/core';\nimport { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { AuthenticatorService } from '../authenticator.service';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { DateAdapter, NativeDateAdapter } from '@angular/material/core';\nimport { FormControl } from '@angular/forms';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { Entry } from '../definitions';\nimport { CalendarComponent } from '../calendar/calendar.component';\nimport { EntrydataService } from '../entrydata.service';\nimport { MatSnackBar } from '@angular/material/snack-bar';\n\n\n@Injectable()\nclass JapaneseDateAdapter extends NativeDateAdapter {\n    getDateNames(): string[] {\n        return [...Array(31).keys()].map(e => String(e + 1));\n    }\n}\n\n@Component({\n    selector: 'app-input-data',\n    templateUrl: './input-data.component.html',\n    styleUrls: ['./input-data.component.scss'],\n    providers: [{\n        provide: DateAdapter,\n        useClass: JapaneseDateAdapter,\n    }]\n})\nexport class InputDataComponent implements OnInit {\n    date: Date;\n    price: number;\n    title: string = '';\n    category: string = '';\n    categories: string[] = [];\n\n    exit: boolean = false;\n\n    constructor(\n        private http: HttpClient,\n        private authenticator: AuthenticatorService,\n        private dateAdapter: DateAdapter<NativeDateAdapter>,\n        public dialogRef: MatDialogRef<InputDataComponent>,\n        @Inject(MAT_DIALOG_DATA) public data: Entry,\n        public entrydata: EntrydataService,\n        private _snackBar: MatSnackBar) {\n        dateAdapter.setLocale('ja-JP');\n        if (data) {\n            if (data['prevInputData']) {\n                this.date = new Date(data['prevInputData']['date']);\n                this.category = data['prevInputData']['category'];\n            } else {\n                this.date = new Date();\n            }\n            this.exit = data['exit'];\n        } else {\n            this.date = new Date();\n        }\n\n    }\n\n    ngOnInit(): void {\n        this.entrydata.getCategories().then(data => {\n            this.categories = data;\n        });\n    }\n\n    async submit() {\n        await this.entrydata.postEntry({\n            date: this.date.getTime(),\n            price: this.price,\n            title: this.title,\n            category: this.category,\n        });\n\n        this.price = undefined;\n        this.title = '';\n\n        await this.entrydata.update(this.date.getFullYear(), this.date.getMonth() + 1);\n\n        this.openSnackBar('登録しました', 'OK');\n\n        if (this.exit)\n            this.dialogRef.close();\n    }\n\n\n\n    onNoClick(): void {\n        this.dialogRef.close();\n    }\n\n    openSnackBar(message: string, action: string) {\n        this._snackBar.open(message, action, {\n            duration: 2000,\n        });\n    }\n}\n\n","<h2>データ追加</h2>\n<div>\n    <mat-form-field>\n        <mat-label>日付</mat-label>\n        <input matInput [matDatepicker]=\"picker\" [(ngModel)]=\"date\">\n        <mat-datepicker-toggle matSuffix [for]=\"picker\"></mat-datepicker-toggle>\n        <mat-datepicker #picker></mat-datepicker>\n    </mat-form-field>\n</div>\n<div>\n    <mat-form-field class=\"\">\n        <mat-label>金額</mat-label>\n        <input matInput [(ngModel)]=\"price\" type=\"number\">\n    </mat-form-field>\n</div>\n<div>\n    <mat-form-field class=\"\">\n        <mat-label>商品名</mat-label>\n        <input matInput [(ngModel)]=\"title\">\n    </mat-form-field>\n</div>\n<div>\n    <mat-form-field class=\"example-full-width\">\n        <input type=\"text\" placeholder=\"分類\" matInput [(ngModel)]=\"category\"\n            [matAutocomplete]=\"auto\">\n        <mat-autocomplete #auto=\"matAutocomplete\">\n            <mat-option *ngFor=\"let option of categories\" [value]=\"option\">\n                {{option}}\n            </mat-option>\n        </mat-autocomplete>\n    </mat-form-field>\n</div>\n<div>\n    <button mat-button (click)=\"submit()\" color=\"primary\" \n    [disabled]=\"!(date && price && title && category)\">登録</button>\n    <button mat-button (click)=\"onNoClick()\">終了</button>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { AuthenticatorService } from '../authenticator.service';\nimport { TooltipComponent } from '@angular/material/tooltip';\nimport { Router } from '@angular/router';\n\n@Component({\n    selector: 'app-login',\n    templateUrl: './login.component.html',\n    styleUrls: ['./login.component.scss']\n})\nexport class LoginComponent implements OnInit {\n\n    constructor(\n        private http: HttpClient,\n        private authenticator: AuthenticatorService,\n        private router: Router,\n    ) { }\n\n    userName: string = '';\n    password: string = '';\n\n    failedToLogin: boolean = false;\n\n    ngOnInit(): void {\n    }\n\n    async login() {\n        this.authenticator.auth(this.userName, this.password).then(() => {\n            this.router.navigate(['/']);\n        }).catch(() => {\n            this.failedToLogin = true;\n        });\n    }\n\n}\n","<div class=\"center\">\n    <h2>ログイン</h2>\n    <div>\n        <mat-form-field>\n            <mat-label>ユーザー名</mat-label>\n            <input matInput [(ngModel)]=\"userName\">\n        </mat-form-field>\n    </div>\n    <div>\n        <mat-form-field>\n            <mat-label>パスワード</mat-label>\n            <input matInput [(ngModel)]=\"password\" type=\"password\">\n        </mat-form-field>\n    </div>\n    <div style=\"margin: 10px 0;\">\n        <mat-chip-list>\n            <mat-chip *ngIf=\"failedToLogin\" color=\"accent\" selected>ログインに失敗しました</mat-chip>\n        </mat-chip-list>\n    </div>\n    <div mat-dialog-actions>\n        <button mat-button color=\"primary\" (click)=\"login()\" [disabled]=\"!(userName && password)\">ログイン</button>\n        <div class=\"or\">または</div>\n        <button mat-button routerLink=\"/register\">ユーザー登録</button>\n    </div>\n</div>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-not-found',\n  templateUrl: './not-found.component.html',\n  styleUrls: ['./not-found.component.scss']\n})\nexport class NotFoundComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"center\">\n\n    <div id=\"not-found-message\">ページが見つかりません</div>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { AuthenticatorService } from '../authenticator.service';\nimport { Router } from '@angular/router';\n\n@Component({\n    selector: 'app-register',\n    templateUrl: './register.component.html',\n    styleUrls: ['./register.component.scss']\n})\nexport class RegisterComponent implements OnInit {\n\n    constructor(\n        private http: HttpClient,\n        private authenticator: AuthenticatorService,\n        private router: Router,\n    ) { }\n\n    userName: string = '';\n    userNameAvailability: boolean = true;\n    password: string = '';\n    passwordAvailability: boolean = true;\n\n    failedToRegister: boolean = false;\n\n    ngOnInit(): void {\n    }\n\n    async checkUserName() {\n        this.http.get('/api/v1/available/username', {\n            params: {\n                userName: this.userName,\n            }\n        }).toPromise().then(res => {\n            this.userNameAvailability = res && res['available'];\n        });\n    }\n\n    async checkPassword() {\n        this.http.get('/api/v1/available/password', {\n            params: {\n                password: this.password,\n            }\n        }).toPromise().then(res => {\n            this.passwordAvailability = res && res['available'];\n        });\n    }\n\n    async register() {\n        return new Promise((res, rej) => {\n            this.http.get('/api/v1/register', {\n                params: {\n                    userName: this.userName,\n                    password: this.password,\n                },\n                observe: 'response'\n            }).subscribe(async response => {\n                if (response.status == 200) {\n                    await this.login();\n                    res();\n                } else {\n                    console.log('failed to register');\n                    rej();\n                }\n            }, async error => {\n                console.log('failed to register');\n                rej();\n            });\n        });\n    }\n\n    async login() {\n        this.authenticator.auth(this.userName, this.password).then(() => {\n            this.router.navigate(['/']);\n        }).catch(() => {\n            this.failedToRegister = true;\n        });\n    }\n}\n","<div class=\"center\">\n    <h2>ユーザー登録</h2>\n    <div>\n        <mat-chip-list>\n            <mat-chip color=\"primary\" *ngIf=\"failedToRegister\">ユーザー登録に失敗しました</mat-chip>\n        </mat-chip-list>\n    </div>\n    <div>\n        <mat-form-field>\n            <mat-label>ユーザー名</mat-label>\n            <input matInput [(ngModel)]=\"userName\" (input)=\"checkUserName()\">\n        </mat-form-field>\n    </div>\n    <div>\n        <mat-chip-list>\n            <mat-chip color=\"primary\" *ngIf=\"!userNameAvailability\">既に使われているユーザー名です</mat-chip>\n        </mat-chip-list>\n    </div>\n    <div>\n        <mat-form-field>\n            <mat-label>パスワード</mat-label>\n            <input matInput [(ngModel)]=\"password\" type=\"password\" (input)=\"checkPassword()\">\n        </mat-form-field>\n    </div>\n    <div>\n        <mat-chip-list>\n            <mat-chip color=\"primary\" *ngIf=\"!passwordAvailability\">パスワードは8文字以上である必要があります</mat-chip>\n        </mat-chip-list>\n    </div>\n    <div mat-dialog-actions>\n        <button mat-button color=\"primary\" (click)=\"register()\"\n            [disabled]=\"!(userName && password && userNameAvailability && passwordAvailability)\">登録</button>\n        <div class=\"or\">または</div>\n        <button mat-button routerLink=\"/login\">ログイン</button>\n    </div>\n</div>","import { Component, OnInit, ViewChild } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { AuthenticatorService } from '../authenticator.service';\nimport { Entry } from '../definitions';\nimport { EntrydataService } from '../entrydata.service';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { CdkDragDrop, moveItemInArray } from '@angular/cdk/drag-drop';\nimport { CategorySettingsComponent } from '../category-settings/category-settings.component';\nimport { MatDialog } from '@angular/material/dialog';\n\n@Component({\n    selector: 'app-settings',\n    templateUrl: './settings.component.html',\n    styleUrls: ['./settings.component.scss']\n})\nexport class SettingsComponent implements OnInit {\n\n    constructor(\n        private http: HttpClient,\n        public authenticator: AuthenticatorService,\n        public entrydata: EntrydataService,\n        private _snackBar: MatSnackBar,\n        private dialog: MatDialog,\n    ) { }\n\n    categories: string[] = [];\n\n\n    ngOnInit(): void {\n        this.entrydata.getCategories().then((data) => {\n            this.categories = data;\n        });\n    }\n\n    download(filename: string, data: any) {\n        const link = document.createElement('a');\n        const blob = new Blob([data], { type: 'text/plane' });\n        const path = URL.createObjectURL(blob);\n        if (link.download !== undefined) {\n            link.download = filename;\n            link.href = path;\n            document.body.appendChild(link);\n            link.click();\n            document.body.removeChild(link);\n        } else {\n            window.open(location.origin + path, '_blank');\n        }\n    }\n\n    async readFile(file: File): Promise<string> {\n        return new Promise((res, rej) => {\n            const fr = new FileReader();\n            fr.readAsText(file, 'utf-8');\n            fr.onload = e => {\n                res(<string>fr.result);\n            }\n            fr.onerror = e => {\n                rej();\n            }\n        });\n    }\n\n    async exportData() {\n        return new Promise((res, rej) => {\n            this.http.get('/api/v1/entry/all', {\n                params: {\n                    userName: this.authenticator.userName,\n                    password: this.authenticator.password,\n                }\n            }).subscribe((response: Entry[]) => {\n                this.download('export.json', JSON.stringify(response.map(e => {\n                    return {\n                        title: e.title,\n                        price: e.price,\n                        date: e.date,\n                        category: e.category,\n                        description: e.description,\n                    };\n                })));\n                res();\n            }, error => {\n                console.log('failed to download data');\n                rej();\n            });\n        });\n    }\n\n    async importData(file: File) {\n        var entries;\n        if (file.name.endsWith('.json')) {\n            entries = JSON.parse(await this.readFile(file));\n        } else if (file.name.endsWith('.csv')) {\n            const txt = await this.readFile(file);\n            entries = txt.split('\\n').slice(1).map(e => {\n                const line = e.split(',');\n                return {\n                    title: line[0],\n                    price: line[1],\n                    date: line[2],\n                    category: line[3],\n                    description: line[4],\n                };\n            });\n        } else {\n            throw new Error();\n        }\n        for (const entry of entries) {\n            const res = await this.entrydata.postEntry(entry)\n                .then(() => true).catch(() => false);\n            this.openSnackBar(res ?\n                'データをインポートしました' :\n                'インポートに失敗しました', 'OK');\n        }\n    }\n\n    @ViewChild('fileInput')\n    fileInput;\n\n    file: File | null = null;\n\n    onClickFileInputButton(): void {\n        this.fileInput.nativeElement.click();\n    }\n\n    async onChangeFileInput() {\n        const files: { [key: string]: File } = this.fileInput.nativeElement.files;\n        this.file = files[0];\n        this.importData(this.file);\n    }\n\n    openSnackBar(message: string, action: string) {\n        this._snackBar.open(message, action, {\n            duration: 2000,\n        });\n    }\n\n    drop(event: CdkDragDrop<string[]>) {\n        moveItemInArray(this.entrydata.categories, event.previousIndex, event.currentIndex);\n    }\n\n    openCategorySettings(category: string): void {\n        const dialogRef = this.dialog.open(CategorySettingsComponent, {\n            width: '300px',\n        });\n\n        dialogRef.afterClosed().subscribe(result => { });\n    }\n}\n","<div class=\"container\">\n    <h3>データ</h3>\n    <div class=\"button-row\">\n        <button mat-raised-button (click)=\"exportData()\">エクスポート</button>\n        <div>\n            <input type=\"file\" style=\"display: none\" #fileInput accept=\"application/json\"\n                (change)=\"onChangeFileInput()\" />\n            <button mat-raised-button (click)=\"onClickFileInputButton()\">\n                インポート\n            </button>\n        </div>\n    </div>\n</div>\n\n<div class=\"container\">\n    <h3>分類を並び替え</h3>\n    <mat-list cdkDropList class=\"example-list\" (cdkDropListDropped)=\"drop($event)\">\n        <mat-list-item class=\"example-box\" *ngFor=\"let category of entrydata.categories\" cdkDrag\n            (click)=\"openCategorySettings(category)\">{{category}}\n        </mat-list-item>\n    </mat-list>\n</div>","import { Component, OnInit, ViewChild, ElementRef } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { AuthenticatorService } from '../authenticator.service';\nimport { EntrydataService } from '../entrydata.service';\nimport { MatDialog } from '@angular/material/dialog';\nimport { Entry } from '../definitions';\nimport { InputDataComponent } from '../input-data/input-data.component';\n\n@Component({\n    selector: 'app-top',\n    templateUrl: './top.component.html',\n    styleUrls: ['./top.component.scss']\n})\nexport class TopComponent implements OnInit {\n\n    constructor(\n        private http: HttpClient,\n        private authenticator: AuthenticatorService,\n        public entrydata: EntrydataService,\n        public dialog: MatDialog,\n    ) {\n    }\n\n    ngOnInit(): void {\n        this.entrydata.updateMonthInfo();\n    }\n\n    prevInputData: Entry;\n    openDialog(): void {\n        const dialogRef = this.dialog.open(InputDataComponent, {\n            width: '300px',\n            data: { prevInputData: this.prevInputData }\n        });\n\n        dialogRef.afterClosed().subscribe(result => {\n        });\n    }\n}\n","<div class=\"center\">\n    <h2>今月の合計/平均</h2>\n    <h1>{{entrydata.currentMonth ? entrydata.currentMonth.sum + '円': '-'}}・{{entrydata.currentMonth ? entrydata.currentMonth.average + '円': '-'}}\n    </h1>\n    <h4>先月の合計/平均</h4>\n    <h3>{{entrydata.prevMonth ? entrydata.prevMonth.sum + '円': '-'}}・{{entrydata.prevMonth ? entrydata.prevMonth.average + '円': '-'}}\n    </h3>\n</div>","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":"webpack:///"}